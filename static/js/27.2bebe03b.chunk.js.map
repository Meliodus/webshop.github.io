{"version":3,"sources":["Pages/Maps/GoogleMap/index.js"],"names":["GoogleMap","state","activeMarker","selectedPlace","showingInfoWindow","position","onMarkerClick","props","marker","setState","onInfoWindowClose","onMapClicked","this","renderAutoComplete","prevProps","map","e","preventDefault","google","autocomplete","maps","places","Autocomplete","bindTo","addListener","place","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","Header","Title","as","Body","style","height","width","centerAroundCurrentLocation","className","onClick","zoom","name","lat","lng","onClose","visible","React","Component","GoogleApiWrapper","apiKey"],"mappings":"sMAmBMA,E,4MACJC,MAAQ,CACNC,aAAc,GACdC,cAAe,GACfC,mBAAmB,EACnBC,SAAU,M,EAGZC,cAAgB,SAACC,EAAOC,GAAR,OACd,EAAKC,SAAS,CACZP,aAAcM,EACdL,cAAeI,EACfH,mBAAmB,K,EAGvBM,kBAAoB,kBAClB,EAAKD,SAAS,CACZP,aAAc,KACdE,mBAAmB,K,EAGvBO,aAAe,WACT,EAAKV,MAAMG,mBACb,EAAKK,SAAS,CACZP,aAAc,KACdE,mBAAmB,K,kEAKvBQ,KAAKC,uB,yCAGYC,GACbF,KAAKL,QAAUO,EAAUC,KAAKH,KAAKC,uB,+BAGhCG,GACPA,EAAEC,mB,2CAGkB,IAAD,SACKL,KAAKL,MAArBW,EADW,EACXA,OAAQH,EADG,EACHA,IAEhB,GAAKG,GAAWH,EAAhB,CAEA,IAAMI,EAAe,IAAID,EAAOE,KAAKC,OAAOC,aAAaV,KAAKO,cAC9DA,EAAaI,OAAO,SAAUR,GAE9BI,EAAaK,YAAY,iBAAiB,WACxC,IAAMC,EAAQN,EAAaO,WAEtBD,EAAME,WAEPF,EAAME,SAASC,SAAUb,EAAIc,UAAUJ,EAAME,SAASC,WAExDb,EAAIe,UAAUL,EAAME,SAASI,UAC7BhB,EAAIiB,QAAQ,KAGd,EAAKvB,SAAS,CAAEJ,SAAUoB,EAAME,SAASI,kB,+BAKtBnB,KAAKX,MAAlBI,SAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAK4B,OAAN,KACE,kBAAC,IAAKC,MAAN,CAAYC,GAAG,MAAf,qBAEF,kBAAC,IAAKC,KAAN,KACE,yBAAKC,MAAO,CAAEC,OAAQ,QAASC,MAAO,SACpC,kBAAC,MAAD,CACEC,6BAA2B,EAC3BC,UAAU,MACVvB,OAAQN,KAAKL,MAAMW,OACnBwB,QAAS9B,KAAKD,aACdgC,KAAM,IAEN,kBAAC,SAAD,CACEC,KAAK,cACLvC,SAAU,CAAEwC,IAAK,WAAYC,IAAK,YAClCJ,QAAS9B,KAAKN,gBAGhB,kBAAC,SAAD,CACEsC,KAAK,cACLvC,SAAU,CAAEwC,IAAK,WAAYC,IAAK,YAClCJ,QAAS9B,KAAKN,gBAGhB,kBAAC,SAAD,CACEsC,KAAK,mBACLF,QAAS9B,KAAKN,gBAGhB,kBAAC,aAAD,CACEE,OAAQI,KAAKX,MAAMC,aACnB6C,QAASnC,KAAKF,kBACdsC,QAASpC,KAAKX,MAAMG,mBAEpB,6BACE,4BAAKQ,KAAKX,MAAME,cAAcyC,mB,GA3G9BK,IAAMC,WAyHfC,qCAAiB,CAC9BC,OAAQ,2CADKD,CAEZnD","file":"static/js/27.2bebe03b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Card, Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport {\r\n  Map,\r\n  Marker,\r\n  GoogleApiWrapper,\r\n  InfoWindow,\r\n  Polyline,\r\n  Polygon,\r\n} from \"google-maps-react\";\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\n\r\nconst polygon = [\r\n  { lat: 21.2105052, lng: 72.8653491 },\r\n  { lat: 21.2206445, lng: 72.8704506 },\r\n  { lat: 21.2183091, lng: 72.8631228 },\r\n];\r\n\r\nclass GoogleMap extends React.Component {\r\n  state = {\r\n    activeMarker: {},\r\n    selectedPlace: {},\r\n    showingInfoWindow: false,\r\n    position: null,\r\n  };\r\n\r\n  onMarkerClick = (props, marker) =>\r\n    this.setState({\r\n      activeMarker: marker,\r\n      selectedPlace: props,\r\n      showingInfoWindow: true,\r\n    });\r\n\r\n  onInfoWindowClose = () =>\r\n    this.setState({\r\n      activeMarker: null,\r\n      showingInfoWindow: false,\r\n    });\r\n\r\n  onMapClicked = () => {\r\n    if (this.state.showingInfoWindow)\r\n      this.setState({\r\n        activeMarker: null,\r\n        showingInfoWindow: false,\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.renderAutoComplete();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props !== prevProps.map) this.renderAutoComplete();\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  renderAutoComplete() {\r\n    const { google, map } = this.props;\r\n\r\n    if (!google || !map) return;\r\n\r\n    const autocomplete = new google.maps.places.Autocomplete(this.autocomplete);\r\n    autocomplete.bindTo(\"bounds\", map);\r\n\r\n    autocomplete.addListener(\"place_changed\", () => {\r\n      const place = autocomplete.getPlace();\r\n\r\n      if (!place.geometry) return;\r\n\r\n      if (place.geometry.viewport) map.fitBounds(place.geometry.viewport);\r\n      else {\r\n        map.setCenter(place.geometry.location);\r\n        map.setZoom(17);\r\n      }\r\n\r\n      this.setState({ position: place.geometry.location });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { position } = this.state;\r\n    // xl={6}\r\n    return (\r\n      <Aux>\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <Card.Header>\r\n                <Card.Title as=\"h5\">Domain Locations</Card.Title>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <div style={{ height: \"300px\", width: \"100%\" }}>\r\n                  <Map\r\n                    centerAroundCurrentLocation\r\n                    className=\"map\"\r\n                    google={this.props.google}\r\n                    onClick={this.onMapClicked}\r\n                    zoom={12}\r\n                  >\r\n                    <Marker\r\n                      name=\"Codedthemes\"\r\n                      position={{ lat: 21.2335163, lng: 72.8643298 }}\r\n                      onClick={this.onMarkerClick}\r\n                    />\r\n\r\n                    <Marker\r\n                      name=\"Roman Point\"\r\n                      position={{ lat: 21.2148165, lng: 72.8627243 }}\r\n                      onClick={this.onMarkerClick}\r\n                    />\r\n\r\n                    <Marker\r\n                      name=\"Current Location\"\r\n                      onClick={this.onMarkerClick}\r\n                    />\r\n\r\n                    <InfoWindow\r\n                      marker={this.state.activeMarker}\r\n                      onClose={this.onInfoWindowClose}\r\n                      visible={this.state.showingInfoWindow}\r\n                    >\r\n                      <div>\r\n                        <h3>{this.state.selectedPlace.name}</h3>\r\n                      </div>\r\n                    </InfoWindow>\r\n                  </Map>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyCE0nvTeHBsiQIrbpMVTe489_O5mwyqofk\",\r\n})(GoogleMap);\r\n"],"sourceRoot":""}