{"version":3,"sources":["Pages/Maps/GoogleMap/index.js"],"names":["GoogleMap","state","activeMarker","selectedPlace","showingInfoWindow","position","onMarkerClick","props","marker","setState","onInfoWindowClose","onMapClicked","this","renderAutoComplete","prevProps","map","e","preventDefault","google","autocomplete","maps","places","Autocomplete","bindTo","addListener","place","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","Header","Title","as","Body","style","height","width","centerAroundCurrentLocation","className","onClick","zoom","name","lat","lng","onClose","visible","React","Component","GoogleApiWrapper","apiKey"],"mappings":"sMAmBMA,E,4MACJC,MAAQ,CACNC,aAAc,GACdC,cAAe,GACfC,mBAAmB,EACnBC,SAAU,M,EAGZC,cAAgB,SAACC,EAAOC,GAAR,OACd,EAAKC,SAAS,CACZP,aAAcM,EACdL,cAAeI,EACfH,mBAAmB,K,EAGvBM,kBAAoB,kBAClB,EAAKD,SAAS,CACZP,aAAc,KACdE,mBAAmB,K,EAGvBO,aAAe,WACT,EAAKV,MAAMG,mBACb,EAAKK,SAAS,CACZP,aAAc,KACdE,mBAAmB,K,kEAKvBQ,KAAKC,uB,yCAGYC,GACbF,KAAKL,QAAUO,EAAUC,KAAKH,KAAKC,uB,+BAGhCG,GACPA,EAAEC,mB,2CAGkB,IAAD,SACKL,KAAKL,MAArBW,EADW,EACXA,OAAQH,EADG,EACHA,IAEhB,GAAKG,GAAWH,EAAhB,CAEA,IAAMI,EAAe,IAAID,EAAOE,KAAKC,OAAOC,aAAaV,KAAKO,cAC9DA,EAAaI,OAAO,SAAUR,GAE9BI,EAAaK,YAAY,iBAAiB,WACxC,IAAMC,EAAQN,EAAaO,WAEtBD,EAAME,WAEPF,EAAME,SAASC,SAAUb,EAAIc,UAAUJ,EAAME,SAASC,WAExDb,EAAIe,UAAUL,EAAME,SAASI,UAC7BhB,EAAIiB,QAAQ,KAGd,EAAKvB,SAAS,CAAEJ,SAAUoB,EAAME,SAASI,kB,+BAKtBnB,KAAKX,MAAlBI,SAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAK4B,OAAN,KACE,kBAAC,IAAKC,MAAN,CAAYC,GAAG,MAAf,qBAEF,kBAAC,IAAKC,KAAN,KACE,yBAAKC,MAAO,CAAEC,OAAQ,QAASC,MAAO,SACpC,kBAAC,MAAD,CACEC,6BAA2B,EAC3BC,UAAU,MACVvB,OAAQN,KAAKL,MAAMW,OACnBwB,QAAS9B,KAAKD,aACdgC,KAAM,IAEN,kBAAC,SAAD,CACEC,KAAK,cACLvC,SAAU,CAAEwC,IAAK,WAAYC,IAAK,YAClCJ,QAAS9B,KAAKN,gBAGhB,kBAAC,SAAD,CACEsC,KAAK,cACLvC,SAAU,CAAEwC,IAAK,WAAYC,IAAK,YAClCJ,QAAS9B,KAAKN,gBAGhB,kBAAC,SAAD,CACEsC,KAAK,mBACLF,QAAS9B,KAAKN,gBAGhB,kBAAC,aAAD,CACEE,OAAQI,KAAKX,MAAMC,aACnB6C,QAASnC,KAAKF,kBACdsC,QAASpC,KAAKX,MAAMG,mBAEpB,6BACE,4BAAKQ,KAAKX,MAAME,cAAcyC,mB,GA3G9BK,IAAMC,WAyHfC,qCAAiB,CAC9BC,OAAQ,2CADKD,CAEZnD","file":"static/js/27.5d091beb.chunk.js","sourcesContent":["import React from \"react\";\nimport { Row, Col, Card, Form, InputGroup, Button } from \"react-bootstrap\";\nimport {\n  Map,\n  Marker,\n  GoogleApiWrapper,\n  InfoWindow,\n  Polyline,\n  Polygon,\n} from \"google-maps-react\";\n\nimport Aux from \"../../../hoc/_Aux\";\n\nconst polygon = [\n  { lat: 21.2105052, lng: 72.8653491 },\n  { lat: 21.2206445, lng: 72.8704506 },\n  { lat: 21.2183091, lng: 72.8631228 },\n];\n\nclass GoogleMap extends React.Component {\n  state = {\n    activeMarker: {},\n    selectedPlace: {},\n    showingInfoWindow: false,\n    position: null,\n  };\n\n  onMarkerClick = (props, marker) =>\n    this.setState({\n      activeMarker: marker,\n      selectedPlace: props,\n      showingInfoWindow: true,\n    });\n\n  onInfoWindowClose = () =>\n    this.setState({\n      activeMarker: null,\n      showingInfoWindow: false,\n    });\n\n  onMapClicked = () => {\n    if (this.state.showingInfoWindow)\n      this.setState({\n        activeMarker: null,\n        showingInfoWindow: false,\n      });\n  };\n\n  componentDidMount() {\n    this.renderAutoComplete();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props !== prevProps.map) this.renderAutoComplete();\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n  }\n\n  renderAutoComplete() {\n    const { google, map } = this.props;\n\n    if (!google || !map) return;\n\n    const autocomplete = new google.maps.places.Autocomplete(this.autocomplete);\n    autocomplete.bindTo(\"bounds\", map);\n\n    autocomplete.addListener(\"place_changed\", () => {\n      const place = autocomplete.getPlace();\n\n      if (!place.geometry) return;\n\n      if (place.geometry.viewport) map.fitBounds(place.geometry.viewport);\n      else {\n        map.setCenter(place.geometry.location);\n        map.setZoom(17);\n      }\n\n      this.setState({ position: place.geometry.location });\n    });\n  }\n\n  render() {\n    const { position } = this.state;\n    // xl={6}\n    return (\n      <Aux>\n        <Row>\n          <Col>\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h5\">Domain Locations</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <div style={{ height: \"300px\", width: \"100%\" }}>\n                  <Map\n                    centerAroundCurrentLocation\n                    className=\"map\"\n                    google={this.props.google}\n                    onClick={this.onMapClicked}\n                    zoom={12}\n                  >\n                    <Marker\n                      name=\"Codedthemes\"\n                      position={{ lat: 21.2335163, lng: 72.8643298 }}\n                      onClick={this.onMarkerClick}\n                    />\n\n                    <Marker\n                      name=\"Roman Point\"\n                      position={{ lat: 21.2148165, lng: 72.8627243 }}\n                      onClick={this.onMarkerClick}\n                    />\n\n                    <Marker\n                      name=\"Current Location\"\n                      onClick={this.onMarkerClick}\n                    />\n\n                    <InfoWindow\n                      marker={this.state.activeMarker}\n                      onClose={this.onInfoWindowClose}\n                      visible={this.state.showingInfoWindow}\n                    >\n                      <div>\n                        <h3>{this.state.selectedPlace.name}</h3>\n                      </div>\n                    </InfoWindow>\n                  </Map>\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Aux>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCE0nvTeHBsiQIrbpMVTe489_O5mwyqofk\",\n})(GoogleMap);\n"],"sourceRoot":""}