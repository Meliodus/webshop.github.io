{"version":3,"sources":["../node_modules/react-bootstrap/esm/Badge.js","Pages/UIElements/Basic/Badges.js","App/components/MainCard.js","App/components/UcFirst.js"],"names":["Badge","React","forwardRef","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","Badges","buttonBadges","map","idx","Button","key","UcFirst","text","Row","Col","title","MainCard","state","isOption","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","this","alignRight","Toggle","id","Menu","Item","onClick","prevState","href","Pages","BLANK_LINK","Header","Title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","children","windowSize","string","charAt","toUpperCase","slice"],"mappings":"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","file":"static/js/14.fd87e422.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React, {Component} from 'react';\nimport {\n    Row,\n    Col,\n    Badge,\n    Button\n} from 'react-bootstrap';\n\nimport Aux from \"../../../hoc/_Aux\";\nimport Card from \"../../../App/components/MainCard\";\nimport UcFirst from \"../../../App/components/UcFirst\";\n\nclass Badges extends Component {\n    render() {\n        const buttonVariants = [\n            'primary',\n            'secondary',\n            'success',\n            'danger',\n            'warning',\n            'info',\n            'light',\n            'dark',\n        ];\n\n        const buttonBadges = buttonVariants.map((variant, idx) => (\n            <Button key={idx} variant={variant}>\n                <UcFirst text={variant} />\n                <Badge variant=\"light\" className=\"ml-1\">4</Badge>\n            </Button>\n        ));\n\n        return (\n            <Aux>\n                <Row>\n                    <Col>\n                        <Card title=\"Basic Badges\">\n                            <h1>\n                                Example heading <Badge variant=\"secondary\">New</Badge>\n                            </h1>\n                            <h2>\n                                Example heading <Badge variant=\"secondary\">New</Badge>\n                            </h2>\n                            <h3>\n                                Example heading <Badge variant=\"secondary\">New</Badge>\n                            </h3>\n                            <h4>\n                                Example heading <Badge variant=\"secondary\">New</Badge>\n                            </h4>\n                            <h5>\n                                Example heading <Badge variant=\"secondary\">New</Badge>\n                            </h5>\n                            <h6>\n                                Example heading <Badge variant=\"secondary\">New</Badge>\n                            </h6>\n                        </Card>\n                        <Card title=\"Button Badges\">\n                            {buttonBadges}\n                        </Card>\n                    </Col>\n                </Row>\n            </Aux>\n        );\n    }\n}\n\nexport default Badges;","import React, {Component} from 'react';\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\nimport windowSize from 'react-window-size';\n\nimport Aux from \"../../hoc/_Aux\";\nimport Pages from \"../../store/constant\";\n\nclass MainCard extends Component {\n    state = {\n        isOption: this.props.isOption,\n        fullCard: false,\n        collapseCard: false,\n        loadCard: false,\n        cardRemove: false\n    };\n\n    cardReloadHandler = () => {\n        this.setState({loadCard: true});\n        setInterval(() => {\n            this.setState({loadCard: false});\n        }, 3000);\n    };\n\n    cardRemoveHandler = () => {\n        this.setState({cardRemove: true});\n    };\n\n    render() {\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\n        let card = '';\n        let cardClass = [];\n\n        if (this.state.isOption) {\n            cardHeaderRight = (\n                <div className=\"card-header-right\">\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\n                            <i className=\"feather icon-more-horizontal\"/>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\n                                <a href={Pages.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\n                            </Dropdown.Item>\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\n                                <a href={Pages.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\n                            </Dropdown.Item>\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\n                                <i className='feather icon-refresh-cw'/>\n                                <a href={Pages.BLANK_LINK}> Reload </a>\n                            </Dropdown.Item>\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\n                                <i className='feather icon-trash'/>\n                                <a href={Pages.BLANK_LINK}> Remove </a>\n                            </Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n            );\n        }\n\n        cardHeader = (\n            <Card.Header>\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\n                {cardHeaderRight}\n            </Card.Header>\n        );\n\n        if (this.state.fullCard) {\n            cardClass = [...cardClass, 'full-card'];\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\n        }\n\n        if (this.state.loadCard) {\n            cardClass = [...cardClass, 'card-load'];\n            loader = (\n                <div className=\"card-loader\">\n                    <i className=\"pct-loader1 anim-rotate\"/>\n                </div>\n            );\n        }\n\n        if (this.state.cardRemove) {\n            cardClass = [...cardClass, 'd-none'];\n        }\n\n        if (this.props.cardClass) {\n            cardClass = [...cardClass, this.props.cardClass];\n        }\n\n        card = (\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\n                {cardHeader}\n                <Collapse in={!this.state.collapseCard}>\n                    <div>\n                        <Card.Body>\n                            {this.props.children}\n                        </Card.Body>\n                    </div>\n                </Collapse>\n                {loader}\n            </Card>\n        );\n\n        return (\n            <Aux>\n                {card}\n            </Aux>\n        );\n    }\n}\n\nexport default windowSize(MainCard);\n","import React from 'react';\n\nclass UcFirst extends React.Component {\n    render() {\n        const string = this.props.text;\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n}\n\nexport default UcFirst;"],"sourceRoot":""}