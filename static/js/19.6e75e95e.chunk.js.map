{"version":3,"sources":["Pages/Other/Docs.js","App/components/MainCard.js"],"names":["Docs","title","isOption","href","target","rel","className","Component","MainCard","state","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","this","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","Pages","BLANK_LINK","Header","Title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","children","windowSize"],"mappings":"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","file":"static/js/19.6e75e95e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Row, Col} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport Card from \"../../App/components/MainCard\";\r\n\r\nclass Docs extends Component {\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card title='Quick Installation' isOption>\r\n                            <p> - First of all it's required to install latest Node and npm - <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener noreferrer\">nodejs</a></p>\r\n                            <p> - Unzip <code>webshop-react-lite.zip</code> file, Inside that directory you will find the <code>WebShop-react-lite/</code> folder</p>\r\n                            <p> - Open your terminal/cmd then navigate to project directory <code>WebShop-react-lite/</code></p>\r\n                            <p> - Install npm packages using command <code>'npm install'</code>,  this will install required node.js third-party plugins into the <code>node_modules/</code> folder.</p>\r\n                            <p> - Compile/Run project using  command  <code>'npm start'</code>, this will compile app in development mode.</p>\r\n                            <p> - Open <a href=\"http://localhost:3000\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:3000</a> to view it on browser.</p>\r\n                            <p> - Now, You can use Datta Able React Admin Template for your application development. </p>\r\n                            <div className='theme-bg2 text-white p-3'>\r\n                                <p>The project was built assuming it is hosted at the server root folder of domain/platform i.e http://Pages.com.</p>\r\n\r\n                                <p>You can control this with the homepage field in your package.json.</p>\r\n                                <p>To deploy build for sub-folder i.e http://Pages.com/project-folder-name/ than \"homepage\" : \"http://Pages.com/project-folder-name/\".</p>\r\n\r\n                                <p>You  also need to set basename in ../src/config.js file.</p>\r\n                                <p>like, basename: '/project-folder-name'</p>\r\n                            </div>\r\n                            <p> - Build project using command <code>'npm run build'</code>, It will create <code>build/</code> folder inside WebShop-react-lite/ folder. </p>\r\n                            <p> - Your app is ready to be deployed. </p>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Docs;","import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport Pages from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: false,\r\n        cardRemove: false\r\n    };\r\n\r\n    cardReloadHandler = () => {\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [];\r\n\r\n        if (this.state.isOption) {\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-horizontal\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={Pages.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={Pages.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={Pages.BLANK_LINK}> Reload </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={Pages.BLANK_LINK}> Remove </a>\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n"],"sourceRoot":""}